services:
  frontend:
    image: "${AWS_ECR_URI}/frontend:${TAG}"
    container_name: frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - VITE_BACKEND_URL=/api

  backend:
    image: "${AWS_ECR_URI}/backend:${TAG}"
    container_name: backend
    ports:
      - "8800:8800"
    networks:
      - app-network
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - VITE_BACKEND_URL=/api
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "${DB_HOST}"]
      interval: 10s
      timeout: 5s
      retries: 5

  internal-reverse-proxy:
    image: "${AWS_ECR_URI}/internal-reverse-proxy:${TAG}"
    container_name: internal-reverse-proxy
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network: